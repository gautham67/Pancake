{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Bold;\f2\fmodern\fcharset0 CourierNewPSMT;
\f3\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red0\green0\blue255;\red38\green38\blue38;
\red83\green83\blue83;\red169\green14\blue26;\red0\green0\blue0;\red36\green43\blue141;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c0\c0\c100000;\cssrgb\c20000\c20000\c20000;
\cssrgb\c40000\c40000\c40000;\cssrgb\c72941\c12941\c12941;\cssrgb\c0\c0\c0;\cssrgb\c18824\c24706\c62353;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1.\
\
\pard\pardeftab720\sl300\partightenfactor0

\f1\b\fs26\fsmilli13333 \cf2 \expnd0\expndtw0\kerning0
import \cf3 pandas \cf2 as \cf3 pd\
\cf2 import \cf3 numpy \cf2 as \cf3 np\
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\b0 \cf4 df\cf5 =\cf4 pd\cf5 .\cf4 read_csv(\cf6 '/home/fathima/Desktop/Python_Sem1/Project/delhi-weather-dat a/testset.csv'\cf4 ) 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 df\cf5 .\cf4 head() 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 df\cf5 .\cf4 columns 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 df\cf5 .\cf4 columns \cf5 = \cf2 map\cf4 (
\f1\b \cf2 lambda 
\f2\b0 \cf4 x: x\cf5 .\cf4 strip(), df\cf5 .\cf4 columns) 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 df\cf5 .\cf4 columns 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 df\cf5 .\cf4 _conds\cf5 .\cf4 value_counts() 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f1\b\fs26\fsmilli13333 \cf2 def 
\f2\b0 \cf3 extract_year\cf4 (value): 
\f1\b \cf2 return 
\f2\b0 \cf4 value[\cf5 0\cf4 :\cf5 4\cf4 ] 
\f3\fs24 \cf7 \

\f1\b\fs26\fsmilli13333 \cf2 def 
\f2\b0 \cf3 extract_month\cf4 (value): 
\f1\b \cf2 return 
\f2\b0 \cf4 value[\cf5 4\cf4 :\cf5 6\cf4 ] 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf4 df[\cf6 'year'\cf4 ]\cf5 =\cf4 df[\cf6 'datetime_utc'\cf4 ]\cf5 .\cf4 apply(
\f1\b \cf2 lambda 
\f2\b0 \cf4 x:extract_year(x)) df[\cf6 'month'\cf4 ]\cf5 =\cf4 df[\cf6 'datetime_utc'\cf4 ]\cf5 .\cf4 apply(
\f1\b \cf2 lambda 
\f2\b0 \cf4 x:extract_month(x)) 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 df_filtered\cf5 .\cf4 _conds\cf5 .\cf4 value_counts() 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 df_filtered\cf5 .\cf4 _wdire\cf5 .\cf4 value_counts() 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f1\b\fs26\fsmilli13333 \cf2 from \cf3 sklearn.preprocessing \cf2 import 
\f2\b0 \cf4 LabelEncoder,OneHotEncoder 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf4 df_filtered\cf5 .\cf4 columns 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 feature_columns \cf5 = \cf4 [\cf6 '_wdire'\cf4 ,\cf6 '_dewptm'\cf4 , \cf6 '_fog'\cf4 , \cf6 '_hail'\cf4 , \cf6 '_hum'\cf4 , \cf6 '_pressurem'\cf4 , \cf6 '_rain'\cf4 , \cf6 '_snow'\cf4 , \cf6 '_tempm'\cf4 , \cf6 '_thunder'\cf4 , \cf6 '_tornado'\cf4 , \cf6 '_vism'\cf4 , \cf6 '_wdird'\cf4 , \cf6 '_wspdm'\cf4 , \cf6 'year'\cf4 , \cf6 'month'\cf4 ,\cf6 '_conds'\cf4 ] 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 final_set \cf5 = \cf4 df_filtered[feature_columns] 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 final_set\cf5 .\cf4 head() 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 number \cf5 = \cf4 LabelEncoder() 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 final_set[\cf6 '_wdire'\cf4 ]\cf5 =\cf4 number\cf5 .\cf4 fit_transform(final_set[\cf6 '_wdire'\cf4 ]\cf5 .\cf4 astype(\cf6 'str'\cf4 )) 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 final_set\cf5 .\cf4 head() 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 final_set\cf5 .\cf4 _wdire\cf5 .\cf4 value_counts() 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f1\b\fs26\fsmilli13333 \cf2 from \cf3 sklearn.model_selection \cf2 import 
\f2\b0 \cf4 train_test_split
\fs29\fsmilli14667 \cf8 In [43]: 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf4 X\cf5 =\cf4 final_set\cf5 .\cf4 iloc[:,\cf5 0\cf4 :\cf5 -1\cf4 ]\cf5 .\cf4 values X\cf5 .\cf4 shape 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 y\cf5 =\cf4 final_set\cf5 .\cf4 iloc[:,\cf5 -1\cf4 ]\cf5 .\cf4 values y\cf5 .\cf4 shape\uc0\u8232 y 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 label_encoder \cf5 = \cf4 LabelEncoder()\uc0\u8232 y \cf5 = \cf4 label_encoder\cf5 .\cf4 fit_transform(y) y 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf7 array([31, 31, 31, ..., 5, 5, 5]) 
\f3\fs24 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf4 X_train,X_test,y_train,y_test \cf5 = \cf4 train_test_split(X,y,test_size\cf5 =0.25\cf4 ,random_ state\cf5 =0\cf4 ) 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f1\b\fs26\fsmilli13333 \cf2 from \cf3 sklearn.tree \cf2 import 
\f2\b0 \cf4 DecisionTreeClassifier
\fs29\fsmilli14667 \cf8 In 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf4 clf\cf5 =\cf4 DecisionTreeClassifier(criterion\cf5 =\cf6 'entropy'\cf4 ,random_state\cf5 =0\cf4 ) 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 clf\cf5 .\cf4 fit(X_train,y_train) 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 y_pred\cf5 =\cf4 clf\cf5 .\cf4 predict(X_train) 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f1\b\fs26\fsmilli13333 \cf2 from \cf3 sklearn.metrics \cf2 import 
\f2\b0 \cf4 accuracy_score \
accuracy_score(y_train,y_pred) \
y_pred \cf5 = \cf4 clf\cf5 .\cf4 predict(X_test) 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf7 array([ 5, 5, 31, ..., 15, 24, 20]) 
\f3\fs24 \

\f2\fs26\fsmilli13333 array([ 5, 5, 31, ..., 15, 24, 20]) 
\f3\fs24 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf4 test_x\cf5 =\cf4 [[\cf6 '12'\cf4 ,\cf6 '8'\cf4 ,\cf6 '1'\cf4 ,\cf6 '0'\cf4 ,\cf6 '45'\cf4 ,\cf6 '1200'\cf4 ,\cf6 '0'\cf4 ,\cf6 '1'\cf4 ,\cf6 '27'\cf4 ,\cf6 '0'\cf4 ,\cf6 '1'\cf4 ,\cf6 '0'\cf4 ,\cf6 '100'\cf4 ,\cf6 '7.8'\cf4 , \cf6 '2016'\cf4 ,\cf6 '10'\cf4 ]] 
\f3\fs24 \cf7 \

\f2\fs26\fsmilli13333 \cf4 test_y\cf5 =\cf4 clf\cf5 .\cf4 predict(test_x)\
test_y\
clf\cf5 .\cf4 score(X_test,y_test)\cf5 *100 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f1\b\fs26\fsmilli13333 \cf2 from \cf3 sklearn.metrics \cf2 import 
\f2\b0 \cf4 accuracy_score \
accuracy_score(y_test,y_pred) 
\f3\fs24 \cf7 \
\pard\pardeftab720\sl300\sa240\partightenfactor0

\f2\fs26\fsmilli13333 \cf4  
\f3\fs24 \cf7 \
\
\
\
\
\
}